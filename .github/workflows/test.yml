# Install Python dependencies, run tests and lint.
#
# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read

jobs:
  test:

    runs-on:
      - ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # See https://github.com/marketplace/actions/setup-python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'  # caching pip dependencies
          cache-dependency-path: setup.cfg

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov wheel black coveralls

      - name: Check code formatting with black
        run: |
          black --check .

      - name: Lint with flake8
        run: |
          # Stop the build if there are Python syntax errors or undefined names.
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          flake8 . --count --exit-zero --max-complexity=10 --statistics

      - name: Run tests
        run: |
          pip install .[test]
          pytest

      # TODO: Moving to pyproject.toml (aka PEP 518) based packaging
      # would be helpful.
      #
      # Ref: https://github.com/atlanticwave-sdx/datamodel/issues/45
      #
      # Also see https://docs.python.org/3/distutils/builtdist.html
      # for some packaging related documentation.
      - name: Try creating a built distribution package
        run: |
          python setup.py bdist -v

      - name: Try building wheel package
        run: |
          python setup.py bdist_wheel -v

      - name: Try building source package
        run: |
          python setup.py sdist -v

      - name: Try installing the sources
        run: |
          pip install -v .

      - name: Send coverage data to coveralls.io
        run: |
          python -m coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Indicate completion to coveralls.io
        run: |
          pip --no-cache-dir install --upgrade coveralls
          python -m coveralls --service=github --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
