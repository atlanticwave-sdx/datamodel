[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "sdx-datamodel"
version = "3.0.0.dev4"
description = "Topology and request description data model in JSON"
authors = [
    { name = "Yufeng Xin", email = "yxin@renci.org" },
    { name = "Sajith Sasidharan", email = "sajith@renci.org" },
    { name = "Cong Wang", email = "cwang@renci.org" },
    { name = "Italo Valcy", email = "italo@ampath.net" },
]
readme = "README.md"
requires-python = ">=3.11"
license = { file = "LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
dependencies = [
    "grenml",
    "networkx",
    "transitions",
    "fastapi",
    "pytz",
    "importlib-resources; python_version < '3.9'",
]

[project.urls]
Home = "https://github.com/atlanticwave-sdx/datamodel"
Issues = "https://github.com/atlanticwave-sdx/datamodel/issues"

[project.optional-dependencies]
test = [
    "pytest >= 7.1.2",
    "pytest-cov >= 3.0.0",
    "jsonschema >= 4.19.0",
    "jsonref >= 1.1.0",
]
lint = [
    "ruff == 0.1.11",
    "black == 24.*",
    "isort == 5.*",
]

[options.packages.find]
where = "."

[tool.setuptools_scm]
# Write version info collected from git to a file.  This happens when
# we run `python -m build`.
write_to = "src/sdx_datamodel/_version.py"

[tool.pytest.ini_options]
addopts = "--cov --cov-report html --cov-report term-missing"
testpaths = [
    "tests"
]

[tool.black]
# A line length of 79 is flake8's default, so let's go with that.
line-length = 79

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.coverage.run]
branch = true
source_pkgs = ["sdx_datamodel"]
omit = ["tests/*"]
relative_files = true

[tool.coverage.paths]
source = [
    # In checkouts.
    "src/",
    # In installed paths.
    "**/site-packages/",
    # In tox environments.
    ".tox/**/site-packages/"
]

[tool.ruff]
ignore = [
    "E501"  # Ignore 'line too long' errors since we auto-format
            # using black.
]
